# pre-commit is a tool to perform a predefined set of tasks manually and/or
# automatically before git commits are made.
#
# Config reference: https://pre-commit.com/#pre-commit-configyaml---top-level
#
# Common tasks
#
# - Register git hooks: pre-commit install --install-hooks
# - Run on all files:   pre-commit run --all-files
#
# https://pre-commit.ci/#configuration
ci:
  autoupdate_schedule: monthly
  autofix_commit_msg: |
    [pre-commit.ci] Apply automatic pre-commit fixes

repos:
  # Codespell: Spell checks the code and documentation
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        entry: codespell
        language: python
        exclude: ^docs/yarn.lock
        args:
          - -L aks

  # Markdown, json, toml
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [markdown, mdx, json, toml]
        exclude: ^docs/

  # Misc...
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    # ref: https://github.com/pre-commit/pre-commit-hooks#hooks-available
    hooks:
      # Autoformat: Makes sure files end in a newline and only a newline
      - id: end-of-file-fixer
        exclude: ^docs/

      # Trims trailing whitespace.
      - id: trailing-whitespace
        exclude: ^docs/
        args: [--markdown-linebreak-ext=md]

      # Lint: Check for files with names that would conflict on a
      # case-insensitive filesystem like MacOS HFS+ or Windows FAT.
      - id: check-case-conflict

      # Lint: Checks that non-binary executables have a proper shebang.
      - id: check-executables-have-shebangs
